# Run:
#    docker-compose up -d
#    Ports:
#        - Kaizten algorithm: 8080
#        - Kaizten auth: 8887
#        - Kaizten configuration server: 8888
#        - Mongo DB: 27017
#        - Spring Cloud DataFlow:
#              - MySQL: 3306
#              - Kafka: 9092
#              - Zookeeper: 2181
#              - Spring Cloud DataFlow Server: 9393
#              - Skipper Server: 7577, 9000-9010, 20000-20105
# Stop:
#    docker-compose down

version: '3.7'

services:
  mysql:
    image: mysql:5.7.25
    container_name: mysql
    environment:
      MYSQL_DATABASE: dataflow
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: rootpw
    expose:
      - 3306

  kafka-broker:
    image: confluentinc/cp-kafka:5.3.1
    container_name: dataflow-kafka
    expose:
      - "9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka-broker
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: dataflow-kafka-zookeeper
    expose:
      - "2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  dataflow-server:
    image: springcloud/spring-cloud-dataflow-server:latest # :${DATAFLOW_VERSION:?DATAFLOW_VERSION is not set!}
    container_name: dataflow-server
    ports:
      - "9393:9393"
    environment:
      - spring.cloud.dataflow.applicationProperties.stream.spring.cloud.stream.kafka.binder.brokers=PLAINTEXT://kafka-broker:9092
      - spring.cloud.dataflow.applicationProperties.stream.spring.cloud.stream.kafka.streams.binder.brokers=PLAINTEXT://kafka-broker:9092
      - spring.cloud.dataflow.applicationProperties.stream.spring.cloud.stream.kafka.binder.zkNodes=zookeeper:2181
      - spring.cloud.dataflow.applicationProperties.stream.spring.cloud.stream.kafka.streams.binder.zkNodes=zookeeper:2181
      - spring.cloud.skipper.client.serverUri=http://skipper-server:7577/api
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataflow
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpw
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
    volumes:
      - ~/.m2:/root/.m2
    depends_on:
      - kafka-broker
      - mysql
    entrypoint: "./wait-for-it.sh -t 180 mysql:3306 -- java -jar /maven/spring-cloud-dataflow-server.jar"

  app-import:
    image: springcloud/openjdk:2.0.0.RELEASE
    container_name: dataflow-app-import
    depends_on:
      - dataflow-server
    command: >
      /bin/sh -c "
        ./wait-for-it.sh -t 180 dataflow-server:9393;
        curl -X DELETE 'http://dataflow-server:9393/apps'
        curl -X DELETE 'http://dataflow-server:9393/tasks/definitions/kaizten-blue-task'
        curl -X DELETE 'http://dataflow-server:9393/tasks/definitions/kaizten-red-task'
        echo 'Tasks deleted' 
        curl -X POST 'http://dataflow-server:9393/apps/task/kaizten-blue-task' -d 'uri=maven://com.kaizten:kaizten-blue-task:0.0.1-SNAPSHOT&force=true'
        curl -X POST 'http://dataflow-server:9393/apps/task/kaizten-red-task' -d 'uri=maven://com.kaizten:kaizten-red-task:0.0.1-SNAPSHOT&force=true'
        echo 'My custom apps imported'
        curl -X POST 'http://dataflow-server:9393/tasks/definitions' -d 'name=kaizten-blue-task&definition=kaizten-blue-task&description=Kaizten+blue+task'
        curl -X POST 'http://dataflow-server:9393/tasks/definitions' -d 'name=kaizten-red-task&definition=kaizten-red-task&description=Kaizten+red+task'
        echo 'My custom tasks created'
        "

  skipper-server:
    image: springcloud/spring-cloud-skipper-server:latest # :${SKIPPER_VERSION:?SKIPPER_VERSION is not set!}
    container_name: skipper
    ports:
      - "7577:7577"
      - "9000-9010:9000-9010"
      - "20000-20105:20000-20105"
    environment:
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_PORTRANGE_LOW=20000
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_PORTRANGE_HIGH=20100
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataflow
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpw
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
    volumes:
      - ~/.m2:/root/.m2      
    entrypoint: "./wait-for-it.sh -t 180 mysql:3306 -- java -Djava.security.egd=file:/dev/./urandom -jar /spring-cloud-skipper-server.jar"

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: kaizten-mongo
    command: mongod --port 27017
    ports:
      - "27017:27017"
    volumes:
      - "$HOME/docker/volumes/mongodb:/data/db"
  
  # Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_RUN_ONCE=true
      - WATCHTOWER_DEBUG=true
    depends_on:
      - kaizten-algorithm
    command: kaizten-algorithm kaizten-auth
  
  # Kaizten auth
  kaizten-auth:
    image: christophercei/kaizten-auth:latest
    container_name: kaizten-auth
    ports:
      - "8087:8080"
    depends_on:
      - mysql
    entrypoint: "./wait-for-it.sh -t 180 mysql:3306 -- java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
            
  # Kaizten algorithm  
  kaizten-algorithm:
    image: christophercei/kaizten-algorithm:latest
    container_name: kaizten-algorithm
    ports:
      - "8080:8080"
    environment:
      - KAIZTEN_SCDF_SERVER_URI=http://dataflow-server:9393    
      - SPRING_DATA_MONGODB_URI=mongodb://kaizten-mongo:27017/kaizten-algorithm
      - KAIZTEN_AUTH_URI=http://kaizten-auth:8080
    depends_on:
      - dataflow-server
    entrypoint: "./wait-for-it.sh -t 180 dataflow-server:9393 -- java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
